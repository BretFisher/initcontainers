---
# subset of template, based on helm chart from https://github.com/bitnami/charts/tree/master/bitnami/postgresql
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rendered-postgresql-primary
spec:
  serviceName: rendered-postgresql-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      role: primary
  template:
    metadata:
      name: rendered-postgresql
      labels:
        app.kubernetes.io/name: postgresql
    spec:      
###########################################################################
# Setup data volume with root user before we start database container
# mostly obsoleted by securityContext: fsGroup and fsGroupChangePolicy
# https://kubernetes.io/blog/2020/12/14/kubernetes-release-1.20-fsgroupchangepolicy-fsgrouppolicy/
      initContainers:
        - name: init-chmod-data
          image: docker.io/bitnami/bitnami-shell:10
          imagePullPolicy: "Always"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          command:
            - /bin/sh
            - -cx
            - |
              chown 1001:1001 /bitnami/postgresql
              mkdir -p /bitnami/postgresql/data
              chmod 700 /bitnami/postgresql/data
              find /bitnami/postgresql -mindepth 1 -maxdepth 1 -not -name "conf" -not -name ".snapshot" -not -name "lost+found" | \
                xargs chown -R 1001:1001
              chmod -R 777 /dev/shm
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql
              subPath: 
            - name: dshm
              mountPath: /dev/shm
###########################################################################

      containers:
        - name: rendered-postgresql
          image: docker.io/bitnami/postgresql:11.11.0-debian-10-r71
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: 
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
